name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.13"

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.13"]
        # Add more Python versions once supported by package

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@v6.3.1
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Sync dependencies
      run: make sync

    - name: Run formatting check
      run: |
        make format
        # Check if any files were changed by formatting
        git diff --exit-code || (echo "Code formatting issues found. Run 'make format' locally." && exit 1)

    - name: Run linting
      run: make lint

    - name: Run tests with coverage
      run: make test

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@v6.3.1

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Sync dependencies
      run: make sync

    - name: Build package
      run: make build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: dist
        path: dist/
        retention-days: 7

  quality-check:
    name: Complete Quality Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@v6.3.1

    - name: Set up Python
      run: uv python install ${{ env.PYTHON_VERSION }}

    - name: Sync dependencies
      run: make sync

    - name: Run complete check
      run: make check
